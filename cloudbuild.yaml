steps:
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/backend-service:$COMMIT_SHA', '.']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/backend-service:$COMMIT_SHA']
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args:
      - 'gcloud'
      - 'run'
      - 'deploy'
      - 'backend-service'
      - '--image=gcr.io/$PROJECT_ID/backend-service:$COMMIT_SHA'
      - '--platform=managed'
      - '--region=us-east1'
      - '--allow-unauthenticated'
      - '--port=5000'
      - '--min-instances=0'
      - '--max-instances=1'
      - '--ingress=all'
      - '--vpc-connector=serverless-connector'
      - '--vpc-egress=all-traffic'
      - '--cpu=1'
      - '--memory=1Gi'
      - '--set-env-vars=SECRET_KEY=${_SECRET_KEY},JWT_SECRET_KEY=${_JWT_SECRET_KEY},MYSQL_HOST=${_MYSQL_HOST},MYSQL_USER=${_MYSQL_USER},MYSQL_PASSWORD=${_MYSQL_PASSWORD},MYSQL_DB=${_MYSQL_DB},MYSQL_CURSORCLASS=${_MYSQL_CURSORCLASS},ALLOWED_ORIGINS=${_ALLOWED_ORIGINS},DEEPSEEK_APIKEY=${_DEEPSEEK_APIKEY},GCS_BUCKET_NAME=${_GCS_BUCKET_NAME},MAIL_SERVER=${_MAIL_SERVER},MAIL_USERNAME=${_MAIL_USERNAME},MAIL_PASSWORD=${_MAIL_PASSWORD},MAIL_PORT=${_MAIL_PORT},MAIL_USE_TLS=${_MAIL_USE_TLS},MAIL_USE_SSL=${_MAIL_USE_SSL},MAIL_DEFAULT_SENDER=${_MAIL_DEFAULT_SENDER},ENV=${_ENV}'
      - '--service-account=nec-diagnostics-keys@necdiagnostics-tesis.iam.gserviceaccount.com'

options:
  logging: CLOUD_LOGGING_ONLY
images:
  - 'gcr.io/$PROJECT_ID/backend-service:$COMMIT_SHA' 
